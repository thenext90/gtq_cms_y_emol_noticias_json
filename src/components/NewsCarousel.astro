---
// Import the news data passed as props
const { newsData = [] } = Astro.props;
---

<section id="news-carousel" class="py-16 bg-gradient-to-br from-blue-50 to-indigo-100">
  <div class="max-w-7xl mx-auto px-6 lg:px-8">
    <div class="grid lg:grid-cols-4 gap-8 items-center">
      <!-- Título de la sección -->
      <div class="lg:col-span-1">
        <div class="text-center lg:text-left">
          <h2 class="text-4xl lg:text-5xl font-extrabold text-gray-900 mb-4">
            Últimas Noticias ISO
          </h2>
          <p class="text-lg text-gray-600 mb-6">
            Mantente actualizado con las últimas tendencias, regulaciones y mejores prácticas en gestión ISO.
          </p>
          <button class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-full font-semibold transition-colors duration-300">
            Ver Todas las Noticias
          </button>
        </div>
      </div>

      <!-- Carousel de noticias -->
      <div class="lg:col-span-3">
        <div class="relative">
          <!-- Contenedor del carousel -->
          <div id="news-carousel-container" class="overflow-hidden rounded-xl">
            <div id="news-track" class="flex gap-4 pb-4">
              {newsData.map((noticia) => (
                <div class="w-full md:w-[calc(50%-0.5rem)] lg:w-[calc(33.333%-0.67rem)] flex-shrink-0">
                  <a href={noticia.link} class="block h-full bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300">
                    {noticia.imagen && (
                      <div class="relative w-full h-48 overflow-hidden rounded-t-lg">
                        <img 
                          src={noticia.imagen} 
                          alt={noticia.titulo || 'Noticia'} 
                          class="w-full h-full object-cover transition-transform duration-300 hover:scale-105"
                        />
                      </div>
                    )}
                    <div class="p-6">
                      {noticia.fecha && (
                        <p class="text-sm text-blue-600 font-medium mb-2">
                          {new Date(noticia.fecha).toLocaleDateString('es-ES', {
                            year: 'numeric',
                            month: 'long',
                            day: 'numeric'
                          })}
                        </p>
                      )}
                      <h3 class="text-xl font-semibold text-gray-900 mb-2">{noticia.titulo}</h3>
                      <p class="text-gray-700 line-clamp-3">{noticia.descripcion || ''}</p>
                    </div>
                  </a>
                </div>
              ))}
            </div>
          </div>

          <!-- Navigation Controls -->
          <div class="flex justify-center mt-6 gap-2">
            <button id="prev-btn" class="p-2 rounded-full bg-white shadow hover:bg-gray-100 focus:outline-none">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
              </svg>
            </button>
            <button id="next-btn" class="p-2 rounded-full bg-white shadow hover:bg-gray-100 focus:outline-none">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Simple carousel functionality
  document.addEventListener('DOMContentLoaded', function() {
    const track = document.getElementById('news-track');
    const prevBtn = document.getElementById('prev-btn');
    const nextBtn = document.getElementById('next-btn');
    
    if (!track || !prevBtn || !nextBtn) return;
    
    let currentPosition = 0;
    const slides = track.children;
    const slideWidth = slides.length > 0 ? slides[0].offsetWidth + 16 : 0; // Add gap
    
    function updateMaxPosition() {
      return Math.max(0, slides.length - (window.innerWidth >= 1024 ? 3 : window.innerWidth >= 768 ? 2 : 1));
    }
    
    let maxPosition = updateMaxPosition();
    
    function updateTrack() {
      track.style.transform = `translateX(-${currentPosition * slideWidth}px)`;
      track.style.transition = 'transform 0.5s ease-in-out';
    }
    
    prevBtn.addEventListener('click', () => {
      currentPosition = Math.max(0, currentPosition - 1);
      updateTrack();
    });
    
    nextBtn.addEventListener('click', () => {
      currentPosition = Math.min(maxPosition, currentPosition + 1);
      updateTrack();
    });
    
    // Responsive adjustment
    window.addEventListener('resize', () => {
      maxPosition = updateMaxPosition();
      currentPosition = Math.min(currentPosition, maxPosition);
      updateTrack();
    });
  });
</script>

<style>
  /* Estilos adicionales para mejorar la experiencia */
  #news-carousel-container {
    touch-action: pan-y pinch-zoom;
  }

  /* Smooth scroll behavior */
  #news-track {
    will-change: transform;
  }

  /* Hover effects para los controles */
  button:focus {
    outline: 2px solid #3B82F6;
    outline-offset: 2px;
  }

  /* Animaciones suaves para las tarjetas */
  #news-track > div {
    transition: transform 0.3s ease;
  }

  /* Efecto de pausa visual en hover */
  #news-carousel-container:hover #news-track {
    animation-play-state: paused;
  }

  /* Optimización para dispositivos móviles */
  @media (max-width: 768px) {
    #news-prev-btn, #news-next-btn {
      padding: 0.5rem;
    }
    
    #news-prev-btn svg, #news-next-btn svg {
      width: 1rem;
      height: 1rem;
    }
  }

  /* Animación de aparición para las noticias */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Aplicar animación con delay escalonado */
  #news-track > div:nth-child(1) { animation: fadeInUp 0.6s ease-out 0.1s both; }
  #news-track > div:nth-child(2) { animation: fadeInUp 0.6s ease-out 0.2s both; }
  #news-track > div:nth-child(3) { animation: fadeInUp 0.6s ease-out 0.3s both; }

  /* Indicador de carga para la barra de progreso */
  #progress-bar {
    background: linear-gradient(90deg, #3B82F6, #1E40AF);
    box-shadow: 0 2px 4px rgba(59, 130, 246, 0.3);
  }
</style>