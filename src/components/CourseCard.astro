---
// Componente para mostrar una tarjeta individual de curso
export interface Props {
  course: {
    id: number;
    cover: string;
    title: string;
    rating: number;
    ratingCount: number;
    price: number;
    category: string;
  };
}

const { course } = Astro.props;

// Función para generar estrellas de rating
const renderStars = (rating: number) => {
  const stars: string[] = [];
  for (let i = 1; i <= 5; i++) {
    stars.push(i <= rating ? '★' : '☆');
  }
  return stars.join('');
};
---

<div class="px-2 py-4">
  <div class="bg-white p-4 rounded-xl shadow-md hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 border border-gray-100">
    <!-- Imagen del curso -->
    <div class="relative overflow-hidden rounded-lg mb-4">
      <img 
        src={course.cover} 
        alt={course.title}
        class="w-full h-48 object-cover transition-transform duration-300 hover:scale-105"
        loading="lazy"
      />
      <div class="absolute top-2 right-2 bg-blue-600 text-white px-2 py-1 rounded-full text-xs font-semibold">
        {course.category}
      </div>
    </div>

    <!-- Contenido de la tarjeta -->
    <div class="mb-4">
      <h3 class="text-lg font-semibold text-gray-900 mb-2 line-clamp-2 min-h-[3.5rem]">
        {course.title}
      </h3>
      
      <!-- Rating -->
      <div class="flex items-center mb-3">
        <span class="text-yellow-400 text-sm mr-1">
          {renderStars(course.rating)}
        </span>
        <span class="text-gray-600 text-sm">
          ({course.ratingCount})
        </span>
      </div>
    </div>

    <!-- Footer con precio y botón -->
    <div class="flex items-center justify-between">
      <div class="flex items-center">
        <span class="text-2xl font-bold text-blue-600">
          ${course.price}
        </span>
        <span class="text-gray-500 text-sm ml-1">/ curso</span>
      </div>
      
      <button class="bg-blue-600 hover:bg-blue-700 text-white p-2 rounded-full transition-colors duration-300 group">
        <svg class="w-5 h-5 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </button>
    </div>
  </div>
</div>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
